on:
    push:
      tags:
        - "v*"

permissions:
  contents: write
  id-token: "write"

jobs:
  build:
    runs-on:
      group: large-runners
    strategy:
      matrix:
        include:
#          - goos: linux
#            goarch: arm64
#            image: arm-debian11
#          - goos: linux
#            goarch: amd64
#            image: main-debian11
#          - goos: linux
#            goarch: mips64
#            image: mips-debian11
#          - goos: windows
#            goarch: 386
#            image: main-debian11
          - goos: windows
            goarch: amd64
            image: main-debian11
#          - goos: darwin
#            goarch: arm64
#            image: darwin-arm64-debian11
#          - goos: darwin
#            goarch: amd64
#            image: darwin-debian11
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Mandatory to use the extract version from tag
      - name: Build ${{ matrix.goos }} ${{ matrix.goarch }}
        run: |
          make ARCH=${{ matrix.goarch }} PLATFORM=${{ matrix.goos }} IMAGE=docker.elastic.co/beats-dev/golang-crossbuild:1.22.4-${{ matrix.image }} build
          mv build/lantern-headless-${{ matrix.goarch }}-${{ matrix.goos }} build/lantern-headless-${{ matrix.goarch }}-${{ matrix.goos }}.exe
      - name: Sign files with Trusted Signing
        if: matrix.goos == 'windows'
        uses: azure/trusted-signing-action@v0.5.1
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: code-signing
          certificate-profile-name: Lantern
          files: ${{ github.workspace }}\build
          files-folder-filter: exe
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: ${{ failure() }}
        with:
          limit-access-to-users: reflog
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lantern-headless-${{ matrix.goarch }}-${{ matrix.goos }}
          path: build/lantern-headless-${{ matrix.goarch }}-${{ matrix.goos }}.exe
          if-no-files-found: 'error'
          retention-days: 1
  release:
    needs: build
    runs-on:
      group: large-runners
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Mandatory to use the extract version from tag
      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          path: build
          merge-multiple: true
      - name: Setup dependencies
        run: |
            curl -O -L "https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64"
            mv cosign-linux-amd64 /usr/local/bin/cosign
            chmod +x /usr/local/bin/cosign
            curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh | sh -s -- -b /usr/local/bin
            sudo apt-get update
            sudo apt-get install -y msitools genisoimage wixl
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: getlantern
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "~> 2"
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          AUR_KEY: ${{ secrets.AUR_KEY }}
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
          MACOS_SIGN_PASSWORD: ${{ secrets.MACOS_SIGN_PASSWORD }}
